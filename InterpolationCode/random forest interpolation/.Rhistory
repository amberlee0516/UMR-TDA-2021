knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(stringr)
library(lubridate)
library(rsample)      # data splitting
library(randomForest) # basic implementation
library(ranger)       # a faster implementation of randomForest
water20 <- read.csv("../../LTRM data/water_data_qfneg.csv", header = TRUE)
water20 <- water20 %>%
mutate(nice_date = mdy(DATE),
year = year(nice_date),
quarter = quarter(nice_date, fiscal_start = 3),
quarter = as.factor(quarter),
FLDNUM = case_when(FLDNUM == 1 ~ "Lake City, MN",
FLDNUM == 2 ~ "Onalaska, WI",
FLDNUM == 3 ~ "Bellevue, IA",
FLDNUM == 4 ~ "Brighton, IL",
FLDNUM == 5 ~ "Jackson, MO",
FLDNUM == 6 ~ "Havana, IL"),
FLDNUM = as.factor(FLDNUM),
STRATUM = as.factor(STRATUM)) %>% # CART can split on categorical variable if
# encoded as a factor variable
select(-SHEETBAR, -nice_date, -DATE, -LOCATCD)
set.seed(4774)
fullTP <- water20 %>% filter(!is.na(TP)) %>% sample_frac(0.5)
TP_split <- initial_split(fullTP, prop = 0.8)
TP_train <- training(TP_split)
TP_test <- testing(TP_split)
TP_rf <- randomForest(
formula = TP ~ .,
data    = TP_train
)
TP_rf <- randomForest(
formula = TP ~ .,
data    = TP_train,
na.action = na.roughfix
)
TP_rf
sqrt(0.01459386)
fullTN <- water20 %>% filter(!is.na(TN)) %>% sample_frac(0.5)
TN_split <- initial_split(fullTN, prop = 0.8)
TN_train <- training(TN_split)
TN_test <- testing(TN_split)
fullTN <- water20 %>% filter(!is.na(TN)) %>% sample_frac(0.5)
TN_split <- initial_split(fullTN, prop = 0.8)
TN_train <- training(TN_split)
TN_test <- testing(TN_split)
# default RF model
TN_rf <- randomForest(
formula = TN ~ .,
data    = TN_train,
na.action = na.roughfix
)
TN_rf
sqrt(2.734829)
fullVEL <- water20 %>% filter(!is.na(VEL)) %>% sample_frac(0.5)
VEL_split <- initial_split(fullVEL, prop = 0.8)
VEL_train <- training(VEL_split)
VEL_test <- testing(VEL_split)
vel_rf <- randomForest(
formula = VEL ~ .,
data    = VEL_train)
vel_rf <- randomForest(
formula = VEL ~ .,
data    = VEL_train,
na.action = na.roughfix)
vel_rf
sqrt(0.04400057)
summary(water20$VEL)
histogram(water20$VEL)
hist(water20$VEL)
hist(water20$VEL, bins = 10)
hist(water20$VEL)
?hist
hist(water20$VEL)
hist(water20$VEL, breaks = c(0, 0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2))
seq(0, 6)
seq(0, 6, by = 0.25)
hist(water20$VEL, breaks = seq(0, 6, by = 0.25))
hist(water20$VEL, breaks = seq(0, 6, by = 0.1))
plot(vel_rf$mse)
plot(vel_rf$mse)
plot(vel_rf$mse, type = "l")
which.min(vel_rf$mse)
plot(sqrt(vel_rf$mse), type = "l")
which.min(vel_rf$mse)
TP_rf
plot(TP_rf$mse)
which.min(TP_rf$mse)
TP_rf
plot(sqrt(TP_rf$mse), type = "l")
which.min(TP_rf$mse)
TN_rf
plot(sqrt(TN_rf$mse), type = "l")
which.min(TN_rf$mse)
vel_rf
plot(sqrt(vel_rf$mse), type = "l")
which.min(vel_rf$mse)
View(TN_test)
TP_pred <- predict(TP_rf, newdata = TP_test)
TP_pred
data.frame(TP_pred)
View(TP_test)
TP_test$TP_pred <- TP_pred
TP_test
TP_test %>%
filter(!is.na(TP_pred))
TP_test %>%
filter(!is.na(TP_pred)) %>%
mutate(residual_sq = (TP - TP_pred)^2) %>%
select(residual_sq) %>%
sum(.)
TP_eval <- TP_test %>%
filter(!is.na(TP_pred)) %>%
mutate(residual_sq = (TP - TP_pred)^2) %>%
select(TP, TP_pred, residual_sq)
TP_eval
sqrt(sum(TP_eval$residual_sq)/dim(TP_eval)[1])
TN_test$TN_pred <- predict(TN_rf, newdata = TN_test)
TN_eval <- TN_test %>%
filter(!is.na(TN_pred)) %>%
mutate(residual_sq = (TN - TN_pred)^2) %>%
select(TN, TN_pred, residual_sq)
sqrt(sum(TN_eval$residual_sq)/dim(TN_eval)[1])
abs(3-5)
TN_eval <- TN_test %>%
filter(!is.na(TN_pred)) %>%
mutate(residual_sq = (TN - TN_pred)^2,
abs_error = abs(TN - TN_pred)) %>%
select(TN, TN_pred, residual_sq, abs_error)
print("RSME")
sqrt(sum(TN_eval$residual_sq)/dim(TN_eval)[1])
print("MAE")
sum(TN_eval$abs_error)/dim(TN_eval)[1]
TP_eval <- TP_test %>%
filter(!is.na(TP_pred)) %>%
mutate(residual_sq = (TP - TP_pred)^2,
abs_residual = abs(TP - TP_pred)) %>%
select(TP, TP_pred, residual_sq)
print("RSME")
sqrt(sum(TP_eval$residual_sq)/dim(TP_eval)[1])
print("MAE")
sum(TP_eval$abs_residual)/dim(TP_eval)[1]
TP_eval <- TP_test %>%
filter(!is.na(TP_pred)) %>%
mutate(residual_sq = (TP - TP_pred)^2,
abs_residual = abs(TP - TP_pred)) %>%
select(TP, TP_pred, residual_sq, abs_residual)
print("RSME")
sqrt(sum(TP_eval$residual_sq)/dim(TP_eval)[1])
print("MAE")
sum(TP_eval$abs_residual)/dim(TP_eval)[1]
TN_eval <- TN_test %>%
filter(!is.na(TN_pred)) %>%
mutate(residual_sq = (TN - TN_pred)^2,
abs_residual = abs(TN - TN_pred)) %>%
select(TN, TN_pred, residual_sq, abs_error)
TN_eval <- TN_test %>%
filter(!is.na(TN_pred)) %>%
mutate(residual_sq = (TN - TN_pred)^2,
abs_residual = abs(TN - TN_pred)) %>%
select(TN, TN_pred, residual_sq, abs_residual)
print("RSME")
sqrt(sum(TN_eval$residual_sq)/dim(TN_eval)[1])
print("MAE")
sum(TN_eval$abs_residual)/dim(TN_eval)[1]
VEL_test$VEL_pred <- predict(VEL_rf, newdata = VEL_test)
VEL_test$VEL_pred <- predict(vel_rf, newdata = VEL_test)
VEL_eval <- VEL_test %>%
filter(!is.na(VEL_pred)) %>%
mutate(residual_sq = (VEL - VEL_pred)^2,
abs_residual = abs(VEL - VEL_pred)) %>%
select(VEL, VEL_pred, residual_sq, abs_residual)
print("RSME")
sqrt(sum(VEL_eval$residual_sq)/dim(VEL_eval)[1])
print("MAE")
sum(VEL_eval$abs_residual)/dim(VEL_eval)[1]
VEL_rf %>% broom()
View(vel_rf)
View(water20)
