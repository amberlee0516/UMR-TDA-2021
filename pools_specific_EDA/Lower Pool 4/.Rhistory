ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.33, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(-92.65, -91.8)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw() +
coord_equal()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(`Pool 4 Regions` = case_when(LONGITUDE <= -92.33 ~ "Lower Pool 4",
LONGITUDE >= -92.11 ~ "Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.33, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(-92.65, -91.8)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw() +
coord_equal()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(`Pool 4 Regions` = case_when(LONGITUDE <= -92.33 ~ "Lower Pool 4",
LONGITUDE >= -92.11 ~ "Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.33, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(-92.65, -91.8)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>% distinct(STRATUM)
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(`Pool 4 Regions` = case_when(LONGITUDE <= -92.33 & STRATUM != "Lake Pepin or Swan Lake" ~ "Lower Pool 4",
LONGITUDE >= -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~ "Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.33, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(-92.65, -91.8)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(`Pool 4 Regions` = case_when(LONGITUDE <= -92.33 & STRATUM != "Lake Pepin or Swan Lake" ~ "Lower Pool 4",
LONGITUDE >= -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~ "Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.4, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(-92.65, -91.8)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(`Pool 4 Regions` = case_when(LONGITUDE <= -92.33 & STRATUM != "Lake Pepin or Swan Lake" ~ "Lower Pool 4",
LONGITUDE >= -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~ "Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.47, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(-92.65, -91.8)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(`Pool 4 Regions` = case_when(LONGITUDE <= -92.33 & STRATUM != "Lake Pepin or Swan Lake" ~ "Lower Pool 4",
LONGITUDE >= -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~ "Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.407, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(-92.65, -91.8)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(`Pool 4 Regions` = case_when(LONGITUDE <= -92.33 & STRATUM != "Lake Pepin or Swan Lake" ~ "Lower Pool 4",
LONGITUDE >= -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~ "Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.42, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(-92.65, -91.8)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(`Pool 4 Regions` = case_when(LONGITUDE <= -92.33 & STRATUM != "Lake Pepin or Swan Lake" ~ "Lower Pool 4",
LONGITUDE >= -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~ "Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(-92.65, -91.8)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
ggsave("Pool 4 Splitting.png", width = 8, height = 6)
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(`Pool 4 Regions` = case_when(LONGITUDE <= -92.33 & STRATUM != "Lake Pepin or Swan Lake" ~ "Lower Pool 4",
LONGITUDE >= -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~ "Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = -LATITUDE, y = -LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(-92.65, -91.8)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(`Pool 4 Regions` = case_when(LONGITUDE <= -92.33 & STRATUM != "Lake Pepin or Swan Lake" ~ "Lower Pool 4",
LONGITUDE >= -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~ "Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = -1*LATITUDE, y = -1*LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(-92.65, -91.8)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(`Pool 4 Regions` = case_when(LONGITUDE <= -92.33 & STRATUM != "Lake Pepin or Swan Lake" ~ "Lower Pool 4",
LONGITUDE >= -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~ "Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = -1*LATITUDE, y = -1*LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(91.8, 92.65)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(LONGITUDE = -1*LONGITUDE,
`Pool 4 Regions` = case_when(LONGITUDE >= 92.33 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
LONGITUDE <= 92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(44.3, 44.65)) +
scale_y_continuous(limits = c(91.8, 92.65)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(wrong_long = LONGITUDE,
wrong_lat = LATITUDE,
LONGITUDE = -1*LATITUDE,
LATITUDE = -1*LONGITUDE,
`Pool 4 Regions` = case_when(LATITUDE >= 92.33 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
LATITUDE <= 92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
scale_x_continuous(limits = c(91.8, 92.65)) +
scale_y_continuous(limits = c(-44.65, -44.3)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(wrong_long = LONGITUDE,
wrong_lat = LATITUDE,
LONGITUDE = -1*LATITUDE,
LATITUDE = -1*LONGITUDE,
`Pool 4 Regions` = case_when(LATITUDE >= 92.33 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
LATITUDE <= 92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
# scale_x_continuous(limits = c(91.8, 92.65)) +
# scale_y_continuous(limits = c(-44.65, -44.3)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(wrong_long = LONGITUDE,
wrong_lat = LATITUDE,
LONGITUDE = -1*wrong_long,
LATITUDE = -1*wrong_lat,
`Pool 4 Regions` = case_when(LATITUDE >= 92.33 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
LATITUDE <= 92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = -92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
# scale_x_continuous(limits = c(91.8, 92.65)) +
# scale_y_continuous(limits = c(-44.65, -44.3)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(wrong_long = LONGITUDE,
wrong_lat = LATITUDE,
LONGITUDE = -1*wrong_long,
LATITUDE = -1*wrong_lat,
`Pool 4 Regions` = case_when(LATITUDE >= 92.33 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
LATITUDE <= 92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = 92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = 92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
# scale_x_continuous(limits = c(91.8, 92.65)) +
# scale_y_continuous(limits = c(-44.65, -44.3)) +
labs(x = "Longitude", y = "Latitude") +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(wrong_long = LONGITUDE,
wrong_lat = LATITUDE,
LONGITUDE = -1*wrong_long,
LATITUDE = -1*wrong_lat,
`Pool 4 Regions` = case_when(LATITUDE >= 92.33 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
LATITUDE <= 92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = 92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = 92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
# scale_x_continuous(limits = c(91.8, 92.65)) +
# scale_y_continuous(limits = c(-44.65, -44.3)) +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2)
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2)
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
geom_point(alpha = 0.2)
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(wrong_long = LONGITUDE,
wrong_lat = LATITUDE,
LONGITUDE = -1*wrong_long,
LATITUDE = -1*wrong_lat,
`Pool 4 Regions` = case_when(LATITUDE >= 92.33 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
LATITUDE <= 92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = 92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = 92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
# scale_x_continuous(limits = c(91.8, 92.65)) +
# scale_y_continuous(limits = c(-44.65, -44.3)) +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
geom_point(alpha = 0.2)
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(alpha = 0.2)
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(alpha = 0.2) +
labs("Plotting Pool 4, as is")
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(alpha = 0.2) +
ggtitle("Plotting Pool 4, as is")
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
geom_point(alpha = 0.2) +
ggtitle("Plotting Pool 4, as is")
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
ggplot(aes(x = LONGITUDE, y = LATITUDE)) +
geom_point(alpha = 0.2) +
ggtitle("Plotting Pool 4, switching LAT and LONG (due to coding error)")
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(wrong_long = LONGITUDE,
wrong_lat = LATITUDE,
LONGITUDE = -1*wrong_lat,
LATITUDE = -1*wrong_long,
`Pool 4 Regions` = case_when(LATITUDE >= 92.33 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
LATITUDE <= 92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = 92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = 92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
# scale_x_continuous(limits = c(91.8, 92.65)) +
# scale_y_continuous(limits = c(-44.65, -44.3)) +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(wrong_long = LONGITUDE,
wrong_lat = LATITUDE,
LONGITUDE = wrong_lat,
LATITUDE = wrong_long,
`Pool 4 Regions` = case_when(LATITUDE >= 92.33 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
LATITUDE <= 92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = 92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = 92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
# scale_x_continuous(limits = c(91.8, 92.65)) +
# scale_y_continuous(limits = c(-44.65, -44.3)) +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(wrong_long = LONGITUDE,
wrong_lat = LATITUDE,
LONGITUDE = wrong_lat,
LATITUDE = wrong_long,
`Pool 4 Regions` = case_when(LATITUDE <= -92.4 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
LATITUDE >=  -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_abline(intercept = 92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_abline(intercept = 92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
# scale_x_continuous(limits = c(91.8, 92.65)) +
# scale_y_continuous(limits = c(-44.65, -44.3)) +
theme_bw()
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(wrong_long = LONGITUDE,
wrong_lat = LATITUDE,
LONGITUDE = wrong_lat,
LATITUDE = wrong_long,
`Pool 4 Regions` = case_when(LATITUDE <= -92.4 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
LATITUDE >=  -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_vline(intercept = -92.11, slope = 0, linetype = "dashed", size = 0.15) +
geom_vline(intercept = -92.43, slope = 0, linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
# scale_x_continuous(limits = c(91.8, 92.65)) +
# scale_y_continuous(limits = c(-44.65, -44.3)) +
theme_bw()
?geom_hline
?geom_vline
water20 %>%
filter(FLDNUM == "Lake City, MN") %>%
mutate(wrong_long = LONGITUDE,
wrong_lat = LATITUDE,
LONGITUDE = wrong_lat,
LATITUDE = wrong_long,
`Pool 4 Regions` = case_when(LATITUDE <= -92.4 & STRATUM != "Lake Pepin or Swan Lake" ~
"Upper Pool 4",
LATITUDE >=  -92.11 & STRATUM != "Lake Pepin or Swan Lake" ~
"Lower Pool 4",
TRUE ~ "Lake Pepin")) %>%
ggplot(aes(x = LATITUDE, y = LONGITUDE)) +
geom_point(aes(color = `Pool 4 Regions`), alpha = 0.2) +
scale_color_manual(values = blue_pal) +
geom_vline(aes(xintercept = -92.11), linetype = "dashed", size = 0.15) +
geom_vline(aes(xintercept = -92.43), linetype = "dashed", size = 0.15) +
ggtitle("Pool 4 in Lake City, Minnesota",
subtitle = "Dashed lines indicate region boundaries") +
guides(colour = guide_legend(override.aes = list(alpha = 1))) +
# scale_x_continuous(limits = c(91.8, 92.65)) +
# scale_y_continuous(limits = c(-44.65, -44.3)) +
theme_bw()
