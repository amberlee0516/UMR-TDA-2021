scale_fill_brewer(palette = "Blues")
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black", position = "fill") +
scale_fill_brewer(palette = "Blues")
# upper pool 4 coloring by STRATUM
ggplot(water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(mapping = aes(color = factor(STRATUM)))
# upper pool 4 coloring by STRATUM
ggplot(water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(mapping = aes(color = factor(STRATUM))) +
scale_fill_brewer(palette = "YlGnBu")
# upper pool 4 coloring by STRATUM
ggplot(water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(mapping = aes(color = factor(STRATUM))) +
scale_color_brewer(palette = "YlGnBu")
# upper pool 4 coloring by STRATUM
ggplot(water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(mapping = aes(color = STRATUM))
### AMBER'S CODE
# BOXPLOTS
plotter_box_by_year <- function(var_str, data, facet_bool){
# facet_bool gives if you should facet by STRATUM type
title <- paste("boxplot_by_year", "4U", var_str, sep = "_")
if (facet_bool){title <- paste(title, "_facet")}
title <- paste(title, "png", sep = ".")
if (facet_bool){
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = year, y = !!sym(var_str), group = year)) +
geom_boxplot() +
facet_wrap(~ QUARTER)
} else {
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = year, y = !!sym(var_str), group = year)) +
geom_boxplot()
}
ggsave(title)
}
sapply(water_vars, plotter_box_by_year, water4U, T )
water4U <- water4 %>%
filter(LONGITUDE > -92.2 & STRATUM != "4")
unique(water4U$STRATUM)
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues")
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black", position = "fill") +
scale_fill_brewer(palette = "Blues")
### AMBER'S CODE
# BOXPLOTS
plotter_box_by_year <- function(var_str, data, facet_bool){
# facet_bool gives if you should facet by STRATUM type
title <- paste("boxplot_by_year", "4U", var_str, sep = "_")
if (facet_bool){title <- paste(title, "_facet")}
title <- paste(title, "png", sep = ".")
if (facet_bool){
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = year, y = !!sym(var_str), group = year)) +
geom_boxplot() +
facet_wrap(~ QUARTER)
} else {
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = year, y = !!sym(var_str), group = year)) +
geom_boxplot()
}
ggsave(title)
}
sapply(water_vars, plotter_box_by_year, water4U, T )
### AMBER'S CODE
# BOXPLOTS
plotter_box_by_year <- function(var_str, data, facet_bool){
# facet_bool gives if you should facet by STRATUM type
title <- paste("boxplot_by_year", "4U", var_str, sep = "_")
if (facet_bool){title <- paste(title, "_facet")}
title <- paste(title, "png", sep = ".")
if (facet_bool){
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = year, y = !!sym(var_str), group = year)) +
geom_boxplot() +
facet_wrap(~ STRATUM)
} else {
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = year, y = !!sym(var_str), group = year)) +
geom_boxplot()
}
ggsave(title)
}
sapply(water_vars, plotter_box_by_year, water4U, T )
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues")
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black", position = "fill") +
scale_fill_brewer(palette = "Blues")
# Create new column "decade"
water4U$DECADE <- water4$year
# Create new column "decade"
water4U$DECADE <- water4U$year
water4 %>% mutate(DECADE = case_when(year < 2001 ~ "1993-2000",
year > 2000 & year < 2015 ~"2001-2014",
year > 2014 ~ "2015-2020"))
water4$DECADE
water4$DECADE %>% mutate(DECADE = case_when(year < 2001 ~ "1993-2000",
year > 2000 & year < 2015 ~"2001-2014",
year > 2014 ~ "2015-2020"))
water4 <- water4 %>% mutate(DECADE = case_when(year < 2001 ~ "1993-2000",
year > 2000 & year < 2015 ~"2001-2014",
year > 2014 ~ "2015-2020"))
water4$DECADE
water4 <- water4 %>% mutate(DECADE = case_when(year < 2001 ~ "1993-2000",
year > 2000 & year < 2015 ~"2001-2014",
year > 2014 ~ "2015-2020",
TRUE ~ "oops"))
water4$DECADE
unique(water4$DECADE)
# Split data by stratum
main <- water4U %<% filter(STRATUM = 1)
# Split data by stratum
main <- water4U %<% filter(STRATUM == 1)
# Split data by stratum
main <- water4U %<%
filter(STRATUM == 1)
# Split data by stratum
main <- water4U %>%
filter(STRATUM == 1)
View(main)
backwater <- water4U %>% filter(STRATUM == 3)
summary(main)
# Find number of missing values
sum(is.na(water4U$TP))
sum(water4U$TP)
shap(ewater4U$TP)
dim(water4U$TP)
nrow(water4U$TP)
length(water4U$TP)
View(water4U)
water4U$TP
# Find number of missing values
sum(!is.na(water4U$TP))
# Find number of missing values
sum(!is.na(water4U$TP)) + sum(!is.na(water4U$TP))
# Find number of missing values
sum(!is.na(water4U$TP)) + sum(is.na(water4U$TP))
# Find number of missing values
sum(is.na(water4U$TP))
sum(is.na(water4U$CHLcal))
sum(is.na(water4U$SS))
sum(is.na(water4U$TURB))
### AMBER'S CODE
# BOXPLOTS
plotter_box_by_year <- function(var_str, data, facet_bool){
# facet_bool gives if you should facet by STRATUM type
title <- paste("boxplot_by_year", "4U", var_str, sep = "_")
if (facet_bool){title <- paste(title, "_facet")}
title <- paste(title, "png", sep = ".")
if (facet_bool){
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = year, y = !!sym(var_str), group = year)) +
geom_boxplot() +
facet_wrap(~ DECADE)
} else {
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = year, y = !!sym(var_str), group = year)) +
geom_boxplot()
}
ggsave(title)
}
sapply(water_vars, plotter_box_by_year, water4U, T )
water4 <- water4 %>% mutate(DECADE = case_when(year < 2001 ~ "1993-2000",
year > 2000 & year < 2015 ~"2001-2014",
year > 2014 ~ "2015-2020",
TRUE ~ "oops"))
unique(water4$DECADE)
# Get the seasons
water4$QUARTER <- quarter(water4$DATE, with_year = FALSE, fiscal_start = 1)
# Split into the upper data
veg4U <- veg4 %>%
filter(MSTRATUM == "BWC-U")
water4U <- water4 %>%
filter(LONGITUDE > -92.2 & STRATUM != "4")
# Create a set that is just the continuous variables and one with just vars for presentation
water_vars <- c('TP', 'CHLcal', 'SS', 'TURB')
continuous <- c('TN','TP','TEMP','DO','TURB','COND','VEL','SS','WDP','CHLcal','SECCHI')
# Show the split of upper pool 4 on the entire pool data
ggplot(water4, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point() +
geom_hline(yintercept = -92.035, color = "red")
# Show the split of upper pool 4 zoomed in - separate water4U_test to include
#   more data points than in the split - helps us to view that the split is good
water4U_test = water4 %>%
filter(LONGITUDE > -92.05)
ggplot(data = water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point() +
geom_hline(yintercept = -92.11, color = "red")
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues")
# upper pool 4 coloring by STRATUM
ggplot(water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(mapping = aes(color = STRATUM))
# Split data by stratum
main <- water4U %>% filter(STRATUM == 1)
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black", position = "fill") +
scale_fill_brewer(palette = "Blues")
side <- water4U %>% filter(STRATUM == 2)
backwater <- water4U %>% filter(STRATUM == 3)
summary(main)
# Find number of missing values - in total data set
sum(is.na(water4U$TP))
sum(is.na(water4U$CHLcal))
sum(is.na(water4U$SS))
sum(is.na(water4U$TURB))
length(water4U$TP)
### AMBER'S CODE
# BOXPLOTS
plotter_box_by_year <- function(var_str, data, facet_bool){
# facet_bool gives if you should facet by STRATUM type
title <- paste("boxplot_by_year", "4U", var_str, sep = "_")
if (facet_bool){title <- paste(title, "_facet")}
title <- paste(title, "png", sep = ".")
if (facet_bool){
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = year, y = !!sym(var_str), group = year)) +
geom_boxplot() +
facet_wrap(~ DECADE)
} else {
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = year, y = !!sym(var_str), group = year)) +
geom_boxplot()
}
ggsave(title)
}
sapply(water_vars, plotter_box_by_year, water4U, T )
### AMBER'S CODE
# BOXPLOTS
plotter_box_by_year <- function(var_str, data, facet_bool){
# facet_bool gives if you should facet by STRATUM type
title <- paste("boxplot_by_year", "4U", var_str, sep = "_")
if (facet_bool){title <- paste(title, "_facet")}
title <- paste(title, "png", sep = ".")
if (facet_bool){
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = decade, y = !!sym(var_str), group = decade)) +
geom_boxplot() +
facet_wrap(~ STRATUM)
} else {
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = decade, y = !!sym(var_str), group = decade)) +
geom_boxplot()
}
ggsave(title)
}
sapply(water_vars, plotter_box_by_year, water4U, T )
### AMBER'S CODE
# BOXPLOTS
plotter_box_by_year <- function(var_str, data, facet_bool){
# facet_bool gives if you should facet by STRATUM type
title <- paste("boxplot_by_year", "4U", var_str, sep = "_")
if (facet_bool){title <- paste(title, "_facet")}
title <- paste(title, "png", sep = ".")
if (facet_bool){
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = DECADE, y = !!sym(var_str), group = DECADE)) +
geom_boxplot() +
facet_wrap(~ STRATUM)
} else {
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = DECADE, y = !!sym(var_str), group = DECADE)) +
geom_boxplot()
}
ggsave(title)
}
sapply(water_vars, plotter_box_by_year, water4U, T )
# Show the split of upper pool 4 on the entire pool data
ggplot(water4, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point() +
geom_hline(yintercept = -92.11, color = STRATUM)
# Show the split of upper pool 4 on the entire pool data
ggplot(water4, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point() +
geom_hline(yintercept = -92.11, aes(color = STRATUM))
# Show the split of upper pool 4 on the entire pool data
ggplot(water4, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(aes(color = STRATUM)) +
geom_hline(yintercept = -92.11))
# Show the split of upper pool 4 on the entire pool data
ggplot(water4, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(aes(color = STRATUM)) +
geom_hline(yintercept = -92.11)
# Show the split of upper pool 4 on the entire pool data
ggplot(water4, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(aes(color = STRATUM))
ggplot(data = water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point() +
geom_hline(yintercept = -92.11, color = "red")
# upper pool 4 coloring by STRATUM
ggplot(water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(mapping = aes(color = STRATUM))
# upper pool 4 coloring by STRATUM
ggplot(water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(mapping = aes(color = STRATUM))
ggplot(data = water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point() +
geom_hline(yintercept = -92.11, color = "red")
# Show the split of upper pool 4 on the entire pool data
ggplot(water4, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(aes(color = STRATUM))
# upper pool 4 coloring by STRATUM
ggplot(water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(mapping = aes(color = STRATUM))
nrows(water4U)
1603/10070
1996/10070
6471/10070
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues")
# upper pool 4 coloring by STRATUM
ggplot(water4U, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(mapping = aes(color = STRATUM))
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues")
View(water4U)
unique(water4U$year)
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues") +
scale_fill_discrete(labels = c("Main channel", "Side channel", "Backwater"))
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
#scale_fill_brewer(palette = "Blues") +
scale_fill_discrete(pallete = "Blues", labels = c("Main channel", "Side channel", "Backwater"))
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues", labels = c("Main channel", "Side channel", "Backwater"))
=
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues", labels = c("Main channel", "Side channel", "Backwater"))
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues", labels = c("Main channel", "Side channel", "Backwater")) +
labs(fill = "Stratum")
# Show the split of upper pool 4 on the entire pool data
ggplot(water4, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(aes(color = STRATUM, labels = c("Main channel", "Side channel", "Backwater")) +
labs(fill = "Stratum"))
# Show the split of upper pool 4 on the entire pool data
ggplot(water4, mapping = aes(x = LATITUDE, y = LONGITUDE )) +
geom_point(aes(color = STRATUM))
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues", labels = c("Main channel", "Side channel", "Backwater")) +
labs(fill = "Stratum")
uggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black", position = "fill") +
scale_fill_brewer(palette = "Blues", labels = c("Main channel", "Side channel", "Backwater")) +
labs(fill = "Stratum")
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black", position = "fill") +
scale_fill_brewer(palette = "Blues", labels = c("Main channel", "Side channel", "Backwater")) +
labs(fill = "Stratum")
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues", labels = c("Main channel", "Side channel", "Backwater")) +
labs(fill = "Stratum",
title = "Number of records per year")
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues", labels = c("Main channel", "Side channel", "Backwater")) +
labs(fill = "Stratum",
title = "Number of records per year with stratum overlay")
# Find the number of samples total per year
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black") +
scale_fill_brewer(palette = "Blues", labels = c("Main channel", "Side channel", "Backwater")) +
labs(fill = "Stratum",
title = "Records per year by stratum")
ggplot(data = water4U, mapping = aes(x = year)) +
geom_histogram(aes(fill = factor(STRATUM) ), binwidth = 1, color = "black", position = "fill") +
scale_fill_brewer(palette = "Blues", labels = c("Main channel", "Side channel", "Backwater")) +
labs(fill = "Stratum",
title = "Records per year by stratum - normalized ")
library(MASS)
stratum <- table(water4U$STRATUM)
pie(fold, labels = c("Main channel", "Side channel", "Backwater"))
pie(stratum, labels = c("Main channel", "Side channel", "Backwater"))
names(water4U)
# Find number of missing values - in total data set
sum(is.na(water4U$TP))
sum(is.na(water4U$CHLcal))
sum(is.na(water4U$SS))
sum(is.na(water4U$TURB))
length(water4U$TP)
7305/10070
3067/10070
3198/10070
3046/10070
length(main$TP)
missing <- table(c(sum(is.na(main$TP)), sum(is.na(side$TP)), sum(is.na(backwater$TP)),
sum(is.na(main$CHLcal)), sum(is.na(side$CHLcal)), sum(is.na(backwater$CHLcal)),
sum(is.na(SS)), sum(is.na(side$SS)), sum(is.na(backwater$SS)),
sum(is.na(main$TURB)), sum(is.na(side$TURB)), sum(is.na(backwater$TURB))),
ncol = 3, byrow = TRUE)
missing <- table(c(sum(is.na(main$TP)), sum(is.na(side$TP)), sum(is.na(backwater$TP)),
sum(is.na(main$CHLcal)), sum(is.na(side$CHLcal)), sum(is.na(backwater$CHLcal)),
sum(is.na(side$SS)), sum(is.na(side$SS)), sum(is.na(backwater$SS)),
sum(is.na(main$TURB)), sum(is.na(side$TURB)), sum(is.na(backwater$TURB))),
ncol = 3, byrow = TRUE)
missing <- table(c(sum(is.na(main$TP)), sum(is.na(side$TP)), sum(is.na(backwater$TP)),
sum(is.na(main$CHLcal)), sum(is.na(side$CHLcal)), sum(is.na(backwater$CHLcal)),
sum(is.na(main$SS)), sum(is.na(side$SS)), sum(is.na(backwater$SS)),
sum(is.na(main$TURB)), sum(is.na(side$TURB)), sum(is.na(backwater$TURB))),
ncol = 3, byrow = TRUE)
sum(is.na(main$TP))
sum(is.na(main$CHLcal))
sum(is.na(main$SS))
sum(is.na(main$TURB))
sum(is.na(side$TP))
sum(is.na(side$CHLcal))
sum(is.na(side$SS))
sum(is.na(side$TURB))
sum(is.na(backwater$TP))
sum(is.na(backwater$CHLcal))
sum(is.na(backwater$SS))
sum(is.na(backwater$TURB))
sapply(water_vars, plotter_box_by_year, main, T )
sapply(water_vars, plotter_box_by_year, side, T )
sapply(water_vars, plotter_box_by_year, water4U, F )
sapply(water_vars, plotter_box_by_year, water4U, T )
sapply(water_vars, plotter_box_by_year, water4U, F )
sapply(water_vars, plotter_box_by_year, water4U, F )
sapply(water_vars, plotter_box_by_year, main, F )
sapply(water_vars, plotter_box_by_year, side, F )
sapply(water_vars, plotter_box_by_year, backwater, F )
sapply(water_vars, plotter_box_by_year, backwater, T )
sapply(water_vars, plotter_box_by_year, water4U, T )
### AMBER'S CODE
# BOXPLOTS
plotter_box_by_year <- function(var_str, data, facet_bool){
# facet_bool gives if you should facet by STRATUM type
title <- paste("boxplot_by_year", "4U", var_str, sep = "_")
if (facet_bool){title <- paste(title, "_facet")}
title <- paste(title, "png", sep = ".")
if (facet_bool){
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = DECADE, y = !!sym(var_str), group = DECADE)) +
geom_boxplot() +
facet_wrap(~ STRATUM, scales = "free")
} else {
data %>%
filter(!is.na(!!sym(var_str))) %>%
ggplot(aes(x = DECADE, y = !!sym(var_str), group = DECADE)) +
geom_boxplot()
}
ggsave(title)
}
sapply(water_vars, plotter_box_by_year, water4U, T )
filter
# Split into decades
dec_one <- water4U %<% filter(DECADE == "1993-2000")
# Split into decades
dec_one <- water4U %>% filter(DECADE == "1993-2000")
dec_three <- water4U %>% filter(DECADE == "2014-2020")
dec_two <- water4U %>% filter(DECADE == "2001-2014")
dec_three <- water4U %>% filter(DECADE == "2015-2020")
summary(dec_one$TP)
summary(dec_two$TP)
summary(dec_three$TP)
summary(dec_one$SS)
summary(dec_two$SS)
summary(dec_three$SS)
summary(dec_one$CHLcal)
summary(dec_two$CHLcal)
summary(dec_three$CHLcal)
summary(dec_one$TURB)
summary(dec_two$TURB)
summary(dec_three$TURB)
unique(dec_one$DECADE)
unique(dec_two$DECADE)
unique(dec_three$DECADE)
summary(dec_one$CHLcal)
summary(dec_two$CHLcal)
summary(dec_three$CHLcal)
